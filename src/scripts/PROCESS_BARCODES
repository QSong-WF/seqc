#!/usr/local/bin/python3
__author__ = 'ambrose'

from sys import argv, exit
from seqc.three_bit import CellBarcodes, DropSeqCellBarcodes
import argparse
import pickle


def main(fout, barcodes, reverse_complement, processor):
    if processor == 'in-drop':
        cb = CellBarcodes(*barcodes, reverse_complement=reverse_complement)
    elif processor == 'drop-seq':
        cb = DropSeqCellBarcodes(*barcodes)
    else:
        raise NotImplementedError

    if not fout.endswith('.p'):
        fout += '.p'
    with open(fout, 'wb') as f:
        pickle.dump(cb, f)

if __name__ == "__main__":
    p = argparse.ArgumentParser()
    p.add_argument('-o', '--output_stem', metavar='O',
                   help='name and path for output file')
    p.add_argument('-b', '--barcode_files', metavar='B', help='barcode files', nargs='?',
                   default=[])
    p.add_argument('-p', '--processor', metavar='P',
                   help='type of experiment barcodes will be used in',
                   choices=['in-drop', 'drop-seq', 'mars-seq', 'cel-seq', 'avo-seq'])
    p.add_argument('--reverse-complement', action='store_true', default=False,
                   help=('indicates that barcodes in fastq files are reverse complements'
                         'of the barcodes found in barcode files'))

    if len(argv) == 1:
        p.print_help()
        exit(2)

    args = p.parse_args()
    main(args.output_stem, args.barcode_files, args.reverse_complement, args.processor)